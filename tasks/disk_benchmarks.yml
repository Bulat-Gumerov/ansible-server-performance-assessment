---

- name: Benchmark the disk WRITE performance
  shell: "dd if=/dev/zero of=/tmp/spa_test.img bs=1G count=1 oflag=dsync 2>&1 | sed -n '3 p' |  awk '{print $10 $11}'"
  throttle: 1  # this is a bit arbitrary but probably sane as to not cripple whatever we're testing too much
  register: disk_write_performance_result
  changed_when: false

- name: Calculate the WRITE speed
  set_fact:
    spa_disk_write_MB_per_s: "{{ (disk_write_performance_result.stdout | human_to_bytes / 1000 / 1000) }}"

- name: Make sure disk WRITEs are performant
  assert:
    that: (spa_disk_write_MB_per_s | int) >= spa_disk_write_MB_per_s_assertion  # value in MB/s
    fail_msg: "Disk WRITE speed {{ (spa_disk_write_MB_per_s | int) }} MB/s
    is lower than asserted {{ spa_disk_write_MB_per_s_assertion }} MB/s"

- name: Wrap cache clearing (only really needed when testing the role in containers)
  block:
    - name: Flush the cache
      shell: "sync && echo 3 > /proc/sys/vm/drop_caches"

  rescue:
    - name: Flush the cache (try delegating to the localhost in case we were in a container)
      shell: "sync && echo 3 > /proc/sys/vm/drop_caches"
      delegate_to: localhost
      become: true

- name: Benchmark the disk READ performance
  shell: "dd if=/tmp/spa_test.img of=/dev/zero bs=64K 2>&1 | sed -n '3 p' |  awk '{print $10 $11}'"
  throttle: 1  # this is a bit arbitrary but probably sane as to not cripple whatever we're testing too much
  register: disk_read_performance_result
  changed_when: false

- name: Calculate the READ performance
  set_fact:
    spa_disk_read_MB_per_s: "{{ (disk_read_performance_result.stdout | human_to_bytes / 1000 / 1000) }}"

- name: Make sure disks READs are performant
  assert:
    that: (spa_disk_read_MB_per_s | int) >= spa_disk_read_MB_per_s_assertion  # value in MB/s
    fail_msg: "Disk READ speed {{ (spa_disk_read_MB_per_s | int) }} MB/s
    is lower than asserted {{ spa_disk_read_MB_per_s_assertion }} MB/s"

- name: Delete the stray test file
  file:
    path: /tmp/spa_test.img
    state: absent
