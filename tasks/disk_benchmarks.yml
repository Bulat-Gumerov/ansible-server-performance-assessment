---

- name: Calculate disk WRITE performance
  shell: dd if=/dev/zero of=/tmp/spa_test.img bs=1G count=1 oflag=dsync 2>&1
  throttle: 1  # this is a bit arbitrary but probably sane as to not cripple whatever we're testing too much
  register: disk_write_performance_result

- name: Calculate the run time
  set_fact:
    spa_disk_write_run_time: "{{ ( ( (disk_write_performance_result.end[:-7] | to_datetime) -
    (disk_write_performance_result.start[:-7] | to_datetime) ).total_seconds() | int ) }}"

- name: Make sure disks are performant
  assert:
    that: (spa_disk_write_run_time | int) <= spa_disk_write_run_time_assertion  # value in MB/s
    fail_msg: "Disk Write time {{ (spa_disk_write_run_time | int) }}s
    is greater than {{ spa_disk_write_run_time_assertion }}s"

- name: Wrap cache clearing (only really needed when testing the role in containers)
  block:
    - name: Flush the cache
      shell: "sync && echo 3 > /proc/sys/vm/drop_caches"

  rescue:
    - name: Flush the cache (try delegating to the localhost in case we were in a container)
      shell: "sync && echo 3 > /proc/sys/vm/drop_caches"
      delegate_to: localhost
      become: true

- name: Calculate disk READ performance
  shell: dd if=/tmp/spa_test.img of=/dev/zero bs=64K
  throttle: 1  # this is a bit arbitrary but probably sane as to not cripple whatever we're testing too much
  register: disk_read_performance_result

- name: Calculate the run time
  set_fact:
    spa_disk_read_run_time: "{{ ( ( (disk_read_performance_result.end[:-7] | to_datetime) -
    (disk_read_performance_result.start[:-7] | to_datetime) ).total_seconds() | int ) }}"

- name: Make sure disks are performant
  assert:
    that: (spa_disk_read_run_time | int) <= spa_disk_read_run_time_assertion  # value in MB/s
    fail_msg: "Disk Read time {{ (spa_disk_read_run_time | int) }}s
    is greater than {{ spa_disk_read_run_time_assertion }}s"

- name: Delete the stray test file
  file:
    path: /tmp/spa_test.img
    state: absent
